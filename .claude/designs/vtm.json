{
  "created_at": "2025-10-29T00:00:00Z",

  "description": "Virtual Task Manager - Token-efficient task management with git integration and autonomous agent orchestration for AI-assisted development",
  "design": {
    "auto_discovery": {
      "enabled": true,
      "suggested_triggers": [
        "what should i work on",
        "next task",
        "show my tasks",
        "task status",
        "vtm status",
        "get context for task",
        "execute task",
        "launch task agent",
        "complete task",
        "mark task done",
        "task stats",
        "list tasks",
        "show instructions"
      ],
      "type": "skill"
    },

    "automation": {
      "enabled": true,
      "git_integration": true,
      "hooks": [
        {
          "action": "validate_vtm",
          "description": "Validate task dependencies and data integrity before commits",
          "event": "pre-commit"
        },
        {
          "action": "refresh_vtm_cache",
          "description": "Update task cache and validate vtm.json after branch switches",
          "event": "post-checkout"
        },
        {
          "action": "validate_vtm_consistency",
          "description": "Ensure task states are consistent before pushing",
          "event": "pre-push"
        },
        {
          "action": "resolve_vtm_conflicts",
          "description": "Automatically resolve vtm.json conflicts after merges",
          "event": "post-merge"
        },
        {
          "action": "create_feature_branch",
          "description": "Create feature branch when executing tasks (via /vtm:execute)",
          "event": "task-start"
        },
        {
          "action": "merge_and_cleanup",
          "description": "Merge feature branch to main and cleanup (via /vtm:done)",
          "event": "task-complete"
        }
      ]
    },

    "external_integration": {
      "needed": false,
      "notes": "Currently file-based (vtm.json). MCP integration can be added later for GitHub Issues, Jira, Notion, etc.",
      "systems": [],
      "type": "none"
    },

    "operations": [
      {
        "description": "Get next ready task to work on",
        "manual_invocation": "/vtm:next",
        "name": "next",
        "triggers_auto_discovery": true
      },
      {
        "description": "Generate minimal context for a specific task (read-only)",
        "manual_invocation": "/vtm:context",
        "name": "context",
        "triggers_auto_discovery": true
      },
      {
        "description": "View details of a specific task",
        "manual_invocation": "/vtm:task",
        "name": "task",
        "triggers_auto_discovery": true
      },
      {
        "description": "Launch a Task agent with detailed instructions for autonomous task execution",
        "git_integration": true,
        "manual_invocation": "/vtm:execute",
        "name": "execute",
        "triggers_auto_discovery": true
      },
      {
        "description": "Complete current or specific task and show next steps",
        "git_integration": true,
        "manual_invocation": "/vtm:done",
        "name": "done",
        "triggers_auto_discovery": true
      },
      {
        "deprecated": true,
        "description": "Mark a task as in-progress (deprecated - use /vtm:execute instead)",
        "manual_invocation": "/vtm:start",
        "name": "start",
        "superseded_by": "execute",
        "triggers_auto_discovery": false
      },
      {
        "description": "Mark a task as completed (direct CLI - use /vtm:done for git integration)",
        "manual_invocation": "/vtm:complete",
        "name": "complete",
        "triggers_auto_discovery": true
      },
      {
        "description": "Generate detailed execution instructions for a task",
        "manual_invocation": "/vtm:instructions",
        "name": "instructions",
        "triggers_auto_discovery": true
      },
      {
        "description": "Show VTM statistics and progress",
        "manual_invocation": "/vtm:stats",
        "name": "stats",
        "triggers_auto_discovery": true
      },
      {
        "description": "List all tasks with their status",
        "manual_invocation": "/vtm:list",
        "name": "list",
        "triggers_auto_discovery": true
      }
    ],

    "recommendations": {
      "next_steps": [
        "Run: /scaffold-domain vtm",
        "Customize generated commands to call vtm CLI",
        "Test git integration workflow",
        "Run: /registry-scan to verify"
      ],
      "start_with": [
        "Primary workflow: Use /vtm:execute (git + agent) and /vtm:done (merge + complete)",
        "Supporting commands: next, context, task, instructions, stats, list",
        "Direct CLI fallbacks: complete (without git integration)",
        "Add skill with trigger phrases for auto-discovery",
        "Add hooks for: pre-commit, post-checkout, pre-push, post-merge, task-start, task-complete"
      ],
      "workflow_notes": [
        "Simplified workflow: /vtm:execute → Agent implements → /vtm:done",
        "Git integration: Auto-creates feature branches, merges to main on completion",
        "Session state: Tracks current task in .vtm-session file",
        "Agent orchestration: Launches Task agents with detailed instructions",
        "Test strategies: TDD (Wallaby MCP), Unit, Integration, Direct"
      ]
    },
    "sharing": {
      "published": false,
      "scope": "personal",
      "team_members": []
    }
  },
  "name": "vtm",
  "version": "1.0.0"
}
