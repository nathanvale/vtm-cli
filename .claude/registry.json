{
  "by_type": {
    "agents": 3,
    "commands": 16,
    "hooks": 4,
    "mcp_servers": 3,
    "plugins": 1,
    "skills": 2
  },
  "components": [
    {
      "dependencies": [],
      "description": "Scaffold Domain - Code Generator",
      "id": "commands:scaffold-domain",
      "location": ".claude/commands/scaffold-domain.md",
      "name": "scaffold-domain",
      "namespace": "commands",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["commands", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "Create New Slash Command",
      "id": "commands:create-command",
      "location": ".claude/commands/create-command.md",
      "name": "create-command",
      "namespace": "commands",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["commands", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "Registry Scan - Component Discovery",
      "id": "commands:registry-scan",
      "location": ".claude/commands/registry-scan.md",
      "name": "registry-scan",
      "namespace": "commands",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["commands", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "Test Command - Component Validation System",
      "id": "commands:test-command",
      "location": ".claude/commands/test-command.md",
      "name": "test-command",
      "namespace": "commands",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["commands", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: Stats",
      "id": "vtm:stats",
      "location": ".claude/commands/vtm/stats.md",
      "name": "stats",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": ["decision-engine"],
      "description": "Analyze domain architecture and suggest improvements",
      "id": "vtm:analyze",
      "location": "src/index.ts",
      "name": "analyze",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": true
      },
      "tags": ["vtm", "command", "cli", "architecture"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: Complete",
      "id": "vtm:complete",
      "location": ".claude/commands/vtm/complete.md",
      "name": "complete",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: Context",
      "id": "vtm:context",
      "location": ".claude/commands/vtm/context.md",
      "name": "context",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: Next",
      "id": "vtm:next",
      "location": ".claude/commands/vtm/next.md",
      "name": "next",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: List",
      "id": "vtm:list",
      "location": ".claude/commands/vtm/list.md",
      "name": "list",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: Task",
      "id": "vtm:task",
      "location": ".claude/commands/vtm/task.md",
      "name": "task",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM: Start",
      "id": "vtm:start",
      "location": ".claude/commands/vtm/start.md",
      "name": "start",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["vtm", "command"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": ["vtm:start", "vtm:context", "vtm-session"],
      "description": "VTM: Work - Start a task and display its context in one step",
      "id": "vtm:work",
      "location": ".claude/commands/vtm/work.md",
      "name": "work",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": true
      },
      "tags": ["vtm", "command", "workflow"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": ["vtm:complete", "vtm:next", "vtm-session"],
      "description": "VTM: Done - Complete current or specific task and show next steps",
      "id": "vtm:done",
      "location": ".claude/commands/vtm/done.md",
      "name": "done",
      "namespace": "vtm",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": true
      },
      "tags": ["vtm", "command", "workflow"],
      "type": "command",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": ["vtm-cli"],
      "description": "Transform ADR+Spec pairs into VTM tasks with intelligent dependency analysis",
      "id": "plan:to-vtm",
      "location": ".claude/commands/plan/to-vtm.md",
      "name": "to-vtm",
      "namespace": "plan",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["plan", "command", "vtm-bridge"],
      "type": "command",
      "used_by": ["plan-expert"],
      "version": "1.0.0"
    },
    {
      "dependencies": ["tavily-mcp", "firecrawl-mcp", "context7-mcp"],
      "description": "AI-powered research and ideation partner for exploring options before implementation",
      "id": "helpers:thinking-partner",
      "location": ".claude/commands/helpers/thinking-partner.md",
      "name": "thinking-partner",
      "namespace": "helpers",
      "quality": {
        "documented": true,
        "security_reviewed": false,
        "tested": false
      },
      "tags": ["helpers", "command", "research", "ideation"],
      "type": "command",
      "used_by": ["plan-expert"],
      "version": "1.0.0"
    },
    {
      "capabilities": ["web_search", "semantic_search", "content_extraction"],
      "description": "Web search MCP server using Tavily AI search engine",
      "id": "tavily-mcp",
      "name": "tavily-mcp",
      "quality": {
        "configured": true,
        "tested": true
      },
      "type": "mcp_server",
      "used_by": ["helpers:thinking-partner"],
      "version": "1.0.0"
    },
    {
      "capabilities": [
        "web_scraping",
        "content_crawling",
        "markdown_conversion"
      ],
      "description": "Web scraping and crawling MCP server for code examples and documentation",
      "id": "firecrawl-mcp",
      "name": "firecrawl-mcp",
      "quality": {
        "configured": true,
        "tested": true
      },
      "type": "mcp_server",
      "used_by": ["helpers:thinking-partner"],
      "version": "1.0.0"
    },
    {
      "capabilities": ["library_docs", "code_examples", "api_reference"],
      "description": "Library documentation MCP server for official package docs and code examples",
      "id": "context7-mcp",
      "name": "context7-mcp",
      "quality": {
        "configured": true,
        "tested": true
      },
      "type": "mcp_server",
      "used_by": ["helpers:thinking-partner"],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "VTM Expert Skill",
      "id": "vtm-expert",
      "location": ".claude/skills/vtm-expert/SKILL.md",
      "name": "vtm-expert",
      "quality": {
        "documented": true,
        "triggers_tested": false
      },
      "trigger_phrases": [],
      "type": "skill",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": ["filesystem-mcp", "plan:to-vtm"],
      "description": "Planning and architecture decision domain expert",
      "id": "plan-expert",
      "location": ".claude/skills/plan-expert/SKILL.md",
      "name": "plan-expert",
      "quality": {
        "documented": true,
        "triggers_tested": false
      },
      "trigger_phrases": [
        "create an adr",
        "document a decision",
        "create a spec",
        "show my adrs",
        "list specs",
        "turn this into tasks",
        "convert to vtm",
        "let's plan",
        "help me plan"
      ],
      "type": "skill",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "capabilities": [],
      "dependencies": [],
      "description": "file-analyzer agent",
      "id": "file-analyzer",
      "location": ".claude/agents/file-analyzer.md",
      "name": "file-analyzer",
      "quality": {
        "documented": true,
        "tested": false
      },
      "type": "agent",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "capabilities": [],
      "dependencies": [],
      "description": "quality-check-fixer agent",
      "id": "quality-check-fixer",
      "location": ".claude/agents/quality-check-fixer.md",
      "name": "quality-check-fixer",
      "quality": {
        "documented": true,
        "tested": false
      },
      "type": "agent",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "capabilities": [],
      "dependencies": [],
      "description": "code-analyzer agent",
      "id": "code-analyzer",
      "location": ".claude/agents/code-analyzer.md",
      "name": "code-analyzer",
      "quality": {
        "documented": true,
        "tested": false
      },
      "type": "agent",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "commit hook for automation",
      "hook_type": "commit",
      "id": "vtm-pre-commit",
      "location": ".claude/hooks/vtm/vtm-pre-commit.sh",
      "name": "vtm-pre-commit",
      "quality": {
        "implemented": true,
        "tested": false
      },
      "type": "hook",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "checkout hook for automation",
      "hook_type": "checkout",
      "id": "vtm-post-checkout",
      "location": ".claude/hooks/vtm/vtm-post-checkout.sh",
      "name": "vtm-post-checkout",
      "quality": {
        "implemented": true,
        "tested": false
      },
      "type": "hook",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "merge hook for automation",
      "hook_type": "merge",
      "id": "vtm-post-merge",
      "location": ".claude/hooks/vtm/vtm-post-merge.sh",
      "name": "vtm-post-merge",
      "quality": {
        "implemented": true,
        "tested": false
      },
      "type": "hook",
      "used_by": [],
      "version": "1.0.0"
    },
    {
      "dependencies": [],
      "description": "push hook for automation",
      "hook_type": "push",
      "id": "vtm-pre-push",
      "location": ".claude/hooks/vtm/vtm-pre-push.sh",
      "name": "vtm-pre-push",
      "quality": {
        "implemented": true,
        "tested": false
      },
      "type": "hook",
      "used_by": [],
      "version": "1.0.0"
    }
  ],
  "filter": "",
  "health": {
    "circular_dependencies": 0,
    "missing_implementations": 0,
    "quality_issues": [],
    "unused_components": 0
  },
  "relationships": {
    "_note": "Auto-generated relationships between components"
  },
  "timestamp": "2025-10-29T19:05:00Z",
  "total_components": 29
}
